legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
#legend.key.size = 20,
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.size = unit(5, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.size = unit(2, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.size = unit(1/5, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.size = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
tikz("../sandbox/results_f.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.width = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
tikz("../sandbox/results_f.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
tikz("../sandbox/results_f.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
results = read.csv('../data/results_c.txt', header = T)
#Get rid of divergence  cases
results = results[results$div ==  0,]
#Get leakage and number of species values
l_vec =  unique(results$l)
n_l = length(l_vec)
s_vec = unique(results$s)
n_s = length(s_vec)
#Preallocate matrix of correlations
cor_mat = matrix(0, nrow = n_l, ncol = n_s)
dev.off()
#Loop through leakage values
for (i in seq(n_l)){
#Get value of leakage in iteration i
l = l_vec[i]
#Loop through numbe of strain values
for (j in seq(n_s)){
#Get value of s in iteration j
s = s_vec[j]
results_ij = results[(results$l == l) & (results$s == s),]
if (nrow(results_ij) > 20){
#Get outlier positions of each vector
outliers_cr = outliers(results_ij$cr_mean)
outliers_glv = outliers(results_ij$glv_mean)
#Get indices to remove
remove_ind = union(outliers_glv, outliers_cr)
#Remove them
results_ij_clean = results_ij[-remove_ind,]
}
else{
next
}
# #Plot
# av_ab = ggplot(data = results_ij_clean,
#                aes(x = cr_mean,
#                    y = glv_mean)) +
#   geom_point()+
#   labs(title = paste('Average abundance (l= ', i, ')'))
# print(av_ab)
#Store correlation
cor_ij = cor(results_ij_clean$cr_mean, results_ij_clean$glv_mean)
# if (is.na(cor_ij)){
#   browser()
# }
cor_mat[i,j]= cor_ij
#Get indices of these data
# ind_l = as.numeric(row.names(results_l))
#Get rows of endpoint matrices
# endpoints_CR_l  = as.vector(as.matrix(endpoints_CR[ind_l,]))
# endpoints_GLV_l = as.vector(as.matrix(endpoints_GLV[ind_l,]))
# plot(endpoints_GLV_l, endpoints_CR_l)
}
}
dimnames(cor_mat) = list(as.character(l_vec), as.character(s_vec))
melt_cor_mat = melt(pmax(cor_mat, 0))
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.width = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
print(p)
tikz("../sandbox/results_c.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
dev.off()
dev.off()
results = results[results$div ==  0,]
#Get leakage and number of species values
l_vec =  unique(results$l)
n_l = length(l_vec)
s_vec = unique(results$s)
n_s = length(s_vec)
#Preallocate matrix of correlations
cor_mat = matrix(0, nrow = n_l, ncol = n_s)
dev.off()
#Loop through leakage values
for (i in seq(n_l)){
#Get value of leakage in iteration i
l = l_vec[i]
#Loop through numbe of strain values
for (j in seq(n_s)){
#Get value of s in iteration j
s = s_vec[j]
results_ij = results[(results$l == l) & (results$s == s),]
if (nrow(results_ij) > 20){
#Get outlier positions of each vector
outliers_cr = outliers(results_ij$cr_mean)
outliers_glv = outliers(results_ij$glv_mean)
#Get indices to remove
remove_ind = union(outliers_glv, outliers_cr)
#Remove them
results_ij_clean = results_ij[-remove_ind,]
}
else{
next
}
# #Plot
# av_ab = ggplot(data = results_ij_clean,
#                aes(x = cr_mean,
#                    y = glv_mean)) +
#   geom_point()+
#   labs(title = paste('Average abundance (l= ', i, ')'))
# print(av_ab)
#Store correlation
cor_ij = cor(results_ij_clean$cr_mean, results_ij_clean$glv_mean)
# if (is.na(cor_ij)){
#   browser()
# }
cor_mat[i,j]= cor_ij
#Get indices of these data
# ind_l = as.numeric(row.names(results_l))
#Get rows of endpoint matrices
# endpoints_CR_l  = as.vector(as.matrix(endpoints_CR[ind_l,]))
# endpoints_GLV_l = as.vector(as.matrix(endpoints_GLV[ind_l,]))
# plot(endpoints_GLV_l, endpoints_CR_l)
}
}
dimnames(cor_mat) = list(as.character(l_vec), as.character(s_vec))
melt_cor_mat = melt(pmax(cor_mat, 0))
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.width = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
tikz("../sandbox/results_f.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
results = read.csv('../data/results_f.txt', header = T)
#Get rid of divergence  cases
results = results[results$div ==  0,]
#Get leakage and number of species values
l_vec =  unique(results$l)
n_l = length(l_vec)
s_vec = unique(results$s)
n_s = length(s_vec)
#Preallocate matrix of correlations
cor_mat = matrix(0, nrow = n_l, ncol = n_s)
dev.off()
#Loop through leakage values
for (i in seq(n_l)){
#Get value of leakage in iteration i
l = l_vec[i]
#Loop through numbe of strain values
for (j in seq(n_s)){
#Get value of s in iteration j
s = s_vec[j]
results_ij = results[(results$l == l) & (results$s == s),]
if (nrow(results_ij) > 20){
#Get outlier positions of each vector
outliers_cr = outliers(results_ij$cr_mean)
outliers_glv = outliers(results_ij$glv_mean)
#Get indices to remove
remove_ind = union(outliers_glv, outliers_cr)
#Remove them
results_ij_clean = results_ij[-remove_ind,]
}
else{
next
}
# #Plot
# av_ab = ggplot(data = results_ij_clean,
#                aes(x = cr_mean,
#                    y = glv_mean)) +
#   geom_point()+
#   labs(title = paste('Average abundance (l= ', i, ')'))
# print(av_ab)
#Store correlation
cor_ij = cor(results_ij_clean$cr_mean, results_ij_clean$glv_mean)
# if (is.na(cor_ij)){
#   browser()
# }
cor_mat[i,j]= cor_ij
#Get indices of these data
# ind_l = as.numeric(row.names(results_l))
#Get rows of endpoint matrices
# endpoints_CR_l  = as.vector(as.matrix(endpoints_CR[ind_l,]))
# endpoints_GLV_l = as.vector(as.matrix(endpoints_GLV[ind_l,]))
# plot(endpoints_GLV_l, endpoints_CR_l)
}
}
dimnames(cor_mat) = list(as.character(l_vec), as.character(s_vec))
melt_cor_mat = melt(pmax(cor_mat, 0))
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.width = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
tikz("../sandbox/results_f.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
l_vec
length(l_vec)
length(s_vec)
results = read.csv('../data/results_fc.txt.txt', header = T)
#Set workspace
setwd('Desktop/UChicago/Coursework/Networks/Homework/project/code/')
#Source r file with necessary functions
source('analysis_functions.r')
#Load
endpoints_CR = read.csv('../data/endpoints_CR.txt', header = F)
endpoints_GLV = read.csv('../data/endpoints_GLV.txt', header = F)
results = read.csv('../data/results_fc.txt.txt', header = T)
#Load
results = read.csv('../data/results_fc.txt', header = T)
#Get rid of divergence  cases
results = results[results$div ==  0,]
#Get leakage and number of species values
l_vec =  unique(results$l)
n_l = length(l_vec)
s_vec = unique(results$s)
n_s = length(s_vec)
#Preallocate matrix of correlations
cor_mat = matrix(0, nrow = n_l, ncol = n_s)
dev.off()
#Loop through leakage values
for (i in seq(n_l)){
#Get value of leakage in iteration i
l = l_vec[i]
#Loop through numbe of strain values
for (j in seq(n_s)){
#Get value of s in iteration j
s = s_vec[j]
results_ij = results[(results$l == l) & (results$s == s),]
if (nrow(results_ij) > 20){
#Get outlier positions of each vector
outliers_cr = outliers(results_ij$cr_mean)
outliers_glv = outliers(results_ij$glv_mean)
#Get indices to remove
remove_ind = union(outliers_glv, outliers_cr)
#Remove them
results_ij_clean = results_ij[-remove_ind,]
}
else{
next
}
# #Plot
# av_ab = ggplot(data = results_ij_clean,
#                aes(x = cr_mean,
#                    y = glv_mean)) +
#   geom_point()+
#   labs(title = paste('Average abundance (l= ', i, ')'))
# print(av_ab)
#Store correlation
cor_ij = cor(results_ij_clean$cr_mean, results_ij_clean$glv_mean)
# if (is.na(cor_ij)){
#   browser()
# }
cor_mat[i,j]= cor_ij
#Get indices of these data
# ind_l = as.numeric(row.names(results_l))
#Get rows of endpoint matrices
# endpoints_CR_l  = as.vector(as.matrix(endpoints_CR[ind_l,]))
# endpoints_GLV_l = as.vector(as.matrix(endpoints_GLV[ind_l,]))
# plot(endpoints_GLV_l, endpoints_CR_l)
}
}
dimnames(cor_mat) = list(as.character(l_vec), as.character(s_vec))
melt_cor_mat = melt(pmax(cor_mat, 0))
dimnames(cor_mat) = list(as.character(l_vec), as.character(s_vec))
melt_cor_mat = melt(pmax(cor_mat, 0))
p = ggplot(data = melt_cor_mat,
aes(x = Var2, y = rev(Var1), fill = value)) +
geom_tile(aes(col = value))+
theme(panel.background = element_blank(),
axis.title.x = element_text(size = 21),
axis.title.y = element_text(size = 21),
axis.text = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.key.width = unit(1, 'cm'),
legend.position = 'bottom',
aspect.ratio = 1)+
scale_x_continuous(breaks = c(10, 20, 30, 40, 50),
expand = c(0, 0))+
scale_y_continuous(breaks = c(0.05, 0.25, 0.45, 0.65, 0.85),
expand = c(0,0))+
scale_color_scico(palette = 'lajolla', direction = -1)+
scale_fill_scico(palette = 'lajolla', direction = -1)+
labs(y = 'Leakage ($l$)', x = 'Complexity ($\\sqrt{ms}$)',
color = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$', fill = '$Cor(x^{\\star}_{GLV}, x^{\\star}_{CR})$')+
guides(colour = guide_colourbar(title.position="top", title.hjust = 0.5),
size = guide_legend(title.position="top", title.hjust = 0.5))
tikz("../sandbox/results_fc.tex",
width = 15.33, height = 5.99,
standAlone = TRUE)
print(p)
dev.off()
